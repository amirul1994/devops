- name: check or install nodejs
  hosts: localhost
  become: no
  tasks:
    - name: check nodejs version
      command: node --version
      register: node_version
      ignore_errors: yes
      
    - name: show nodejs version
      debug:
        msg: "NodeJS version is {{ node_version.stdout }}"
      when: node_version.stdout | length > 0
    
    - name: install nodejs if not installed
      block:
        - name: install nvm
          shell: >
            wget https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.7/install.sh
        
        - name: downloaded directory
          command: pwd
          register: download_directory

        - name: show download directory
          debug:
            msg: "{{ download_directory.stdout }}"
          
        - name: change permission of install.sh
          become: yes
          file:
            path: "{{ download_directory.stdout }}/install.sh"
            owner: "{{ ansible_env.USER }}"
            group: "{{ ansible_env.USER }}"
            mode: '0700'

        - name: install nvm
          shell: 
            bash "{{ download_directory.stdout }}/install.sh"
          args:
            executable: /bin/bash
        
        - name: install nodejs
          shell: >
            source "{{ download_directory.stdout }}/.nvm/nvm.sh" && nvm install 18
          args:
            executable: /bin/bash
          become: yes
          
      when: node_version.stdout | length == 0

########

- name: check or install python3 for flask
  hosts: localhost
  become: no
  tasks:
    - name: check python3 
      command: python3 --version
      ignore_errors: yes
      register: python3_version
    
    - name: show python3 version
      debug:
        msg: "python3 version is {{ python3_version.stdout }}"
      when:
        python3_version.stdout | length > 0
    
    - name: python3 install
      apt:
        name:
          - python3
          - python3-pip
        state: present
        update_cache: yes
      become: yes
      when: python3_version.stdout | length == 0

###########

- name: check or install java and maven
  hosts: localhost
  become: no
  tasks:
    - name: current directory
      command: pwd
      register: current_directory
    
    - name: print current directory
      debug:
        msg: "{{ current_directory.stdout }}"

    - name: determine user
      set_fact:
        executive_user: >-
          {{
              (ansible_connection == 'local') | ternary(ansible_env.USER, ansible_user)
          }}
    
    - name: show user
      debug:
        msg: "User is {{ executive_user }}"

    
    - name: create bash script for java version
      copy:
        content: |
          #!/bin/bash

          java_version=$(sudo apt list --installed 2> /dev/null | grep -E '^openjdk|^OpenJdk')

          if [[ -n "$java_version" ]]; then
              java_version=$(java --version | awk 'NR==1 && (/^openjdk/ || /^OpenJdk/)')
              echo $java_version
          fi
        dest: "{{ current_directory.stdout }}/check_java_version.sh"
        owner: "{{ executive_user }}"
        group: "{{ executive_user }}"
        mode: '0700'
      become: yes
    
    - name: check java version
      shell: >
        "{{ current_directory.stdout }}/check_java_version.sh"
      register: java_version

    - name: show java version or install java
      block:
        - name: show java version
          debug:
            msg: "Java version is {{ java_version.stdout }}" 
          when: java_version.stdout | length > 0
        
        - name: install java
          apt:
            name: openjdk-21-jdk
            update_cache: yes
          become: yes
          when: java_version.stdout | length == 0